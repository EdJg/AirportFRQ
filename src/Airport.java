import java.util.ArrayList;

public class Airport
{
    /** A list of the flights into and out of this airport
     *  Guaranteed not to be null and to contain only non-null entries
     */
    private ArrayList<Flight> allFlights;

    public Airport(ArrayList<Flight> flights)
    {
        allFlights = flights;
    }

    public ArrayList<Flight> getAllFlights()
    {
        return allFlights;
    }

    /** Returns the revenue generated by all flights at the airport,
     *  as described in part (a)
     */
    public double getTotalRevenue()
    {
        int total = 0;
        for (Flight plane: allFlights)
        {
            if (plane.getNumPassengers() >= plane.getCapacity())
            {
                total += plane.getCapacity() * plane.getPrice();
            }
            else
            {
                total += plane.getNumPassengers() * plane.getPrice();
            }
        }
        return total;
    }

    /** Updates the list of flights by removing certain flights and
     *  returns the total number of passengers whose flights were removed,
     *  as described in part (b)
     */
    public int updateFlights()
    {
        int removed = 0;
        for (int index = 0; index < allFlights.size(); index ++)
        {
            if (allFlights.get(index).getNumPassengers() < allFlights.get(index).getCapacity() * 0.2)
            {
                removed += allFlights.get(index).getNumPassengers();
                allFlights.remove(index);
                index --;
            }
        }
        return removed;
    }
}